Rendering Patterns for Web Apps

1. Client-Side Rendering
    In CSR, most of logic happens in the browser. The server sends a basic HTML file with a script tag and JS runs on the client side to fetch necessary data and render the page. Client requests website, server responds with HTML file with script tag, browser executes JS script and fetches data, JS renders page dynamically and populates HTML with received data. Subsequent interactions update the page dynamically without full page reloads. CSR experience quick initial load of HTML and smooth interactivity after the initial load but they are not optimized for good SEO due to search engining seeing an empty HTML at first due to rendering happening after JS is downloaded. Initial load times can also be slower to due JS execution and CSR relies on modern browser capabilities. 
        CSR is ideal for SPAs's with dynamic, interactive interfaces; real-time applications such as live updates, gaming or chat Apps
            - Examples: React, Angular, Vue.js, Ember.js